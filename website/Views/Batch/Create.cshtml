@model Milton.Website.Models.Batch.BatchViewModel

<section class="page-header alternative-header">
    <ol class="breadcrumb">
        <li>Milton</li>
        <li>Capture Batch</li>
    </ol>
    <div class="page-header_title">
        <h1>
            Capture new Batch
        </h1>
    </div>
</section>
<section class="page-content">

    <div class="panel panel-default">
        <div class="panel-body">
            <form id="batch-form" class="form" action="/batch/create" method="post">
                <div class="form-group">
                    <input class="form-control" id="SubmissionDate" name="SubmissionDate" type="text" />
                    <label>Submission Date</label>
                </div>
                <div class="form-group">
                    <table id="accounts" class="table dataTable no-footer" role="grid" aria-describedby="tableDataTables1_info">
                        <thead>
                            <tr role="row">
                                <th class="sorting_asc" tabindex="0" aria-controls="tableDataTables1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Patient Firstnames">Account No.</th>
                                <th class="sorting" tabindex="0" aria-controls="tableDataTables1" rowspan="1" colspan="1" aria-label="Patient Surname">Name and Surname</th>
                                <th class="sorting" tabindex="0" aria-controls="tableDataTables1" rowspan="1" colspan="1" aria-label="Patient Total Transport">Actions</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div class="form-group">
                    <table id="border-trips" class="table dataTable no-footer" role="grid" aria-describedby="tableDataTables1_info">
                        <thead>
                            <tr role="row">
                                <th class="sorting_asc" tabindex="0" aria-controls="tableDataTables1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Patient Firstnames">Border Trip ID</th>
                                <th class="sorting" tabindex="0" aria-controls="tableDataTables1" rowspan="1" colspan="1" aria-label="Patient Surname">Name and Surname</th>
                                <th class="sorting" tabindex="0" aria-controls="tableDataTables1" rowspan="1" colspan="1" aria-label="Patient Surname">Amount</th>
                                <th class="sorting" tabindex="0" aria-controls="tableDataTables1" rowspan="1" colspan="1" aria-label="Patient Total Transport">Actions</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div class="form-group">
                    <input style="width:80%;" class="form-control" id="search" name="search" type="text" />
                    <label>Patient ID/Passport Number</label>
                </div>
                <div class="form-group">
                    <input style="width:80%;" class="form-control" id="border-trip-search" name="border-trip-search" type="text" />
                    <label>Border/Bus Trip ID</label>
                </div>
                <div class="form-group text-right">
                    <button type="submit" class="btn btn-primary materialRipple-light materialRipple-btn">Save<div class="materialRipple-md-ripple-container"></div></button>
                    <a class="btn btn-warning" href="/batch">Cancel</a>
                </div>
            </form>
        </div>
    </div>



</section>

@section Scripts{

    <script type="text/javascript">

        $("#SubmissionDate").datepicker();
        var table;
        var borderTripsTable;

        $('#batch-form').on('submit', function () {
            try {

                //Accounts
                var accounts = $('#accounts').DataTable();
                var c = 0;
                var s = '';
                accounts.data().each(function (d) {
                    s += d.AccountId + ',';
                    c++;
                });

                var html = '<input type="hidden" name="AccountIds" value="' + s + '" />';

                //Border Trips
                var borderTrips = $('#border-trips').DataTable();
                var cc = 0;
                var ss = '';
                borderTrips.data().each(function (d) {
                    ss += d.BorderTripId + ',';
                    cc++;
                });

                var borderHtml = '<input type="hidden" name="BorderTripIds" value="' + ss + '" />';

                $('#batch-form').append(html);
                $('#batch-form').append(borderHtml);
            }
            catch (e) {
                return false;
            }
            //$('#batch-form').append('<input type="hidden" name="Gaurdian" value="' + gaurdian + '" />');
        });

        $(document).ready(function () {

            table = $('#accounts').DataTable({
                paging: false,
                searching: false,
                info: false,
                processing: false,
                deferRender: true,
                autoWidth: false,
                columns: [
                    {
                        data: 'AccountId'
                    },
                     {
                         data: 'NameSurname'
                     },
                    {
                        data: null,
                        sortable: false,
                        searchable: false,
                        width: '40px',
                        render: function (data, type, full, meta) {
                            return '<div style="text-align:center"><a alt="Remove" class="account-remove" href="javascript:void(0)"><i class="fa fa-trash-o"></i></a></div>';
                        },
                        createdCell: function (td, cellData, rowData, row, col) { $(td).css('vertical-align', 'middle'); }
                    }
                ]
            });

            borderTripsTable = $('#border-trips').DataTable({
                paging: false,
                searching: false,
                info: false,
                processing: false,
                deferRender: true,
                autoWidth: false,
                columns: [
                    {
                        data: 'BorderTripId'
                    },
                    {
                        data: 'NameSurname'
                    },
                    {
                        data: 'Amount'
                    },
                    {
                        data: null,
                        sortable: false,
                        searchable: false,
                        width: '40px',
                        render: function (data, type, full, meta) {
                            return '<div style="text-align:center"><a alt="Remove" class="border-trip-remove" href="javascript:void(0)"><i class="fa fa-trash-o"></i></a></div>';
                        },
                        createdCell: function (td, cellData, rowData, row, col) { $(td).css('vertical-align', 'middle'); }
                    }
                ]
            });



            $("#search").autocomplete({
                source: "/accounts/autocomplete",
                minLength: 2,
                select: function (event, ui) {
                    // Get the values from the inputs
                    var id = ui.item.accountid;
                    var namesurname = ui.item.namesurname;

                    var row = table.row.add({
                        "AccountId": id,
                        "NameSurname": namesurname
                    }).draw().node();

                    //Handle the click to remove a contact from the grid
                    $(row).find('td .account-remove').on('click', function () {
                        var r = $(this).closest('tr');
                        $('#accounts').DataTable()
                            .row(r)
                            .remove()
                            .draw();
                    });

                    //Reset the contacts form
                    setTimeout(function () {
                        $('#search').val('');
                    }, 150);

                }
            });

            $("#border-trip-search").autocomplete({
                source: "/bordertrip/autocomplete",
                minLength: 1,
                select: function (event, ui) {
                    // Get the values from the inputs
                    var id = ui.item.bordertripid;
                    var namesurname = ui.item.namesurname;
                    var amount = ui.item.amount;

                    var row = borderTripsTable.row.add({
                        "BorderTripId": id,
                        "NameSurname": namesurname,
                        "Amount": amount
                    }).draw().node();

                    //Handle the click to remove a contact from the grid
                    $(row).find('td .border-trip-remove').on('click', function () {
                        var r = $(this).closest('tr');
                        $('#border-trips').DataTable()
                            .row(r)
                            .remove()
                            .draw();
                    });

                    //Reset the contacts form
                    setTimeout(function () {
                        $('#border-trip-search').val('');
                    }, 150);

                }
            });



            $('#batch-form').validate({
                rules: {
                    SubmissionDate: {
                        required: true
                    }
                },
                highlight: function (element) {
                    $(element).closest('.form-group').addClass('has-error');
                },
                unhighlight: function (element) {
                    $(element).closest('.form-group').removeClass('has-error');
                },
                errorElement: 'span',
                errorClass: 'help-block',
                errorPlacement: function (error, element) {
                    if (element.parent('.input-group').length) {
                        error.insertAfter(element.parent());
                    } else {
                        error.insertAfter(element);
                    }
                }
            });
        });

    </script>

}